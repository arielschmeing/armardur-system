DROP TABLE IF EXISTS
	user_permission,
	class_level,
	character_class,
	elemental,
	branch,
	skill,
	level_skill,
	expertise,
	character,
	character_elemental,
	character_skill,
	user_account;


CREATE TABLE user_account (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	name VARCHAR(100) NOT NULL,
	password VARCHAR(255) NOT NULL,
	email VARCHAR(100) NOT NULL,
	created_at TIMESTAMP DEFAULT NOW() NOT NULL,
	active BOOLEAN NOT NULL DEFAULT TRUE
);
ALTER TABLE user_account ADD CONSTRAINT pk_user_account PRIMARY KEY (id);
ALTER TABLE user_account ADD CONSTRAINT uk_user_account_email UNIQUE (email);


CREATE TABLE user_permission (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	role VARCHAR(100) CHECK (role IN ('USER', 'MODERATOR', 'ADMIN')) NOT NULL,
	user_id BIGINT NOT NULL
);
ALTER TABLE user_permission ADD CONSTRAINT pk_user_permission PRIMARY KEY (id);
ALTER TABLE user_permission ADD CONSTRAINT uk_user_permission_role_userid UNIQUE (role, user_id);
ALTER TABLE user_permission ADD CONSTRAINT fk_user_permission_user FOREIGN KEY (user_id) REFERENCES user_account(id);


CREATE TABLE skill (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	name VARCHAR(100) NOT NULL,
	level INTEGER NOT NULL,
	range INTEGER NOT NULL,
	duration INTEGER NOT NULL,
	cast_time INTEGER NOT NULL,
	description VARCHAR(512)
);
ALTER TABLE skill ADD CONSTRAINT pk_skill PRIMARY KEY (id);
ALTER TABLE skill ADD CONSTRAINT uk_skill_name UNIQUE (name);


CREATE TABLE branch (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	skill_id BIGINT NOT NULL,
	name VARCHAR(50) CHECK (name IN ('AURA', 'DEFENSE', 'FORTIFICATION', 'EMISSION', 'TRANSMUTATION', 'MANIPULATION', 'SUPPORT', 'SPECIFIC')) NOT NULL
);
ALTER TABLE branch ADD CONSTRAINT pk_branch PRIMARY KEY (id);
ALTER TABLE branch ADD CONSTRAINT uk_branch_name_skillid UNIQUE (name, skill_id);
ALTER TABLE branch ADD CONSTRAINT fk_branch_skill FOREIGN KEY (skill_id) REFERENCES skill(id);


CREATE TABLE elemental (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	skill_id BIGINT NOT NULL,
	name VARCHAR(50) CHECK (name IN ('LUMINOS', 'UMBRA', 'VORTEXIS', 'ASTRALITH', 'AQUIS', 'IGNIS', 'UNRESTRICTED')) NOT NULL
);
ALTER TABLE elemental ADD CONSTRAINT pk_elemental PRIMARY KEY (id);
ALTER TABLE elemental ADD CONSTRAINT uk_elemental_name_skillid UNIQUE (name, skill_id);
ALTER TABLE elemental ADD CONSTRAINT fk_elemental_skill FOREIGN KEY (skill_id) REFERENCES skill(id);


CREATE TABLE character_class (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	name VARCHAR(50) NOT NULL,
	description VARCHAR(512) NOT NULL,
	difficult_class INTEGER NOT NULL,
	die_health INTEGER NOT NULL,
	base_health INTEGER NOT NULL,
	physical_mod VARCHAR(50) CHECK (physical_mod IN ('DEXTERITY', 'STRENGTH', 'CONSTITUTION')) NOT NULL,
	caster_mod VARCHAR(50) CHECK (caster_mod IN ('WISDOM', 'ELEMENTAL', 'CHARISMA', 'MENTAL')) NOT NULL
);
ALTER TABLE character_class ADD CONSTRAINT pk_character_class PRIMARY KEY (id);
ALTER TABLE character_class ADD CONSTRAINT uk_character_class_name UNIQUE (name);


CREATE TABLE class_level (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	class_id BIGINT NOT NULL,
	proficiency INTEGER NOT NULL,
	level INTEGER NOT NULL
);
ALTER TABLE class_level ADD CONSTRAINT pk_class_level PRIMARY KEY (id);
ALTER TABLE class_level ADD CONSTRAINT fk_class_level_class FOREIGN KEY (class_id) REFERENCES character_class(id);


CREATE TABLE level_skill (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	level_id BIGINT NOT NULL,
	skill_id BIGINT NOT NULL
);
ALTER TABLE level_skill ADD CONSTRAINT pk_level_skill PRIMARY KEY (id);
ALTER TABLE level_skill ADD CONSTRAINT fk_level_skill_level FOREIGN KEY (level_id) REFERENCES class_level(id);
ALTER TABLE level_skill ADD CONSTRAINT fk_level_skill_skill FOREIGN KEY (skill_id) REFERENCES skill(id);


CREATE TABLE character (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	image VARCHAR(512) NOT NULL,
	user_id BIGINT NOT NULL,
	hp INTEGER NOT NULL,
	level INTEGER NOT NULL,
	name VARCHAR(100) NOT NULL,
	race VARCHAR(100) NOT NULL,
	armor_class INTEGER NOT NULL,
	class_id BIGINT NOT NULL,
	strength INTEGER NOT NULL,
	dexterity INTEGER NOT NULL,
	constitution INTEGER NOT NULL,
	mental INTEGER NOT NULL,
	wisdom INTEGER NOT NULL,
	charisma INTEGER NOT NULL,
	elemental INTEGER NOT NULL
);
ALTER TABLE character ADD CONSTRAINT pk_character PRIMARY KEY (id);
ALTER TABLE character ADD CONSTRAINT fk_character_user FOREIGN KEY (user_id) REFERENCES user_account(id);
ALTER TABLE character ADD CONSTRAINT fk_character_class FOREIGN KEY (class_id) REFERENCES character_class(id);


CREATE TABLE expertise (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	character_id BIGINT NOT NULL,
	modifier VARCHAR(100) NOT NULL,
	name VARCHAR(100) NOT NULL
);
ALTER TABLE expertise ADD CONSTRAINT pk_expertise PRIMARY KEY (id);
ALTER TABLE expertise ADD CONSTRAINT fk_modifier FOREIGN KEY (character_id) REFERENCES character(id);


CREATE TABLE character_elemental (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	name VARCHAR(100) NOT NULL,
	character_id BIGINT NOT NULL,
	is_affinity BOOLEAN NOT NULL
);
ALTER TABLE character_elemental ADD CONSTRAINT pk_character_elemental PRIMARY KEY (id);
ALTER TABLE character_elemental ADD CONSTRAINT fk_character_elemental FOREIGN KEY (character_id) REFERENCES character(id);


CREATE TABLE character_skill (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	character_id BIGINT NOT NULL,
	skill_id BIGINT NOT NULL
);
ALTER TABLE character_skill ADD CONSTRAINT pk_character_skill PRIMARY KEY (id);
ALTER TABLE character_skill ADD CONSTRAINT fk_character_skill_character FOREIGN KEY (character_id) REFERENCES character(id);
ALTER TABLE character_skill ADD CONSTRAINT fk_character_skill_skill FOREIGN KEY (skill_id) REFERENCES skill(id);